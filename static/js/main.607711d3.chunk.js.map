{"version":3,"sources":["components/Navbar/index.js","components/CharacterCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["NavBar","props","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","target","active","characterCard","alt","name","src","image","handleIncrement","id","Wrapper","children","Title","App","state","characters","count","high","cardId","find","character","el","chosen","setState","shuffleCharacters","newGame","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","forEach","this","map","CharacterCard","key","Component","ReactDOM","render","document","getElementById"],"mappings":"mXA+BeA,EApBA,SAACC,GAAW,IAAD,EACMC,oBAAS,GADf,mBACfC,EADe,KACPC,EADO,KAKtB,OACI,kBAACC,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAI,EAACC,OAAO,MAC7B,kBAACC,EAAA,EAAD,CAAaC,KAAK,KAAlB,eACA,kBAACC,EAAA,EAAD,CAAeC,QALR,kBAAMR,GAAWD,MAMxB,kBAACU,EAAA,EAAD,CAAUV,OAAQA,EAAQW,QAAM,GAC5B,kBAACC,EAAA,EAAD,CAAKC,UAAU,UAAUF,QAAM,GAC3B,kBAACG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASR,KAAK,gCAAgCS,OAAO,SAASC,QAAM,GAApE,e,MCZTC,MARf,SAAuBpB,GACnB,OACI,yBAAKe,UAAU,QACP,yBAAKM,IAAKrB,EAAMsB,KAAMC,IAAKvB,EAAMwB,MAAOb,QAAS,kBAAMX,EAAMyB,gBAAgBzB,EAAM0B,S,MCCpFC,MAJf,SAAiB3B,GACf,OAAO,yBAAKe,UAAU,WAAWf,EAAM4B,W,MCG1BC,MAJf,SAAe7B,GACb,OAAO,wBAAIe,UAAU,SAASf,EAAM4B,W,OCqEvBE,E,2MAjEXC,MAAQ,CACNC,aACAC,MAAO,EACPC,KAAM,G,EAGRT,gBAAkB,SAACU,GACjB,EAAKJ,MAAMC,WAAWI,MAAK,SAACC,EAAWC,GACrC,GAAID,EAAUX,KAAOS,EAAQ,CAC3B,IAA8B,IAA1BH,EAAWM,GAAIC,OAIjB,OAHA,EAAKC,SAAS,CAAEP,MAAO,EAAKF,MAAME,MAAQ,IAC1CD,EAAWM,GAAIC,QAAS,EACxB,EAAKE,kBAAkBT,IAChB,EAGP,EAAKU,e,EAObD,kBAAoB,SAAAE,GAGlB,IAFA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAElB,IAAMD,GACXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAEzCF,EAAiBD,EADjBG,GAAgB,GAEhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAEvB,OAAOD,G,EAETD,QAAU,WAMR,OALI,EAAKX,MAAMG,KAAO,EAAKH,MAAME,OAC/B,EAAKO,SAAS,CAAEN,KAAM,EAAKH,MAAME,QAEnC,EAAKF,MAAMC,WAAWmB,SAAQ,SAAAd,GAAS,OAAIA,EAAUE,QAAS,KAC9D,EAAKC,SAAS,CAAEP,MAAO,KAChB,G,wEAKC,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,sCAAYmB,KAAKrB,MAAME,MAAvB,SAAoCmB,KAAKrB,MAAMG,MAC/C,kBAAC,EAAD,gCACCkB,KAAKrB,MAAMC,WAAWqB,KAAI,SAAAhB,GAAS,OAClC,kBAACiB,EAAD,CACE5B,GAAIW,EAAUX,GACd6B,IAAKlB,EAAUX,GACfF,MAAOa,EAAUb,MACjBC,gBAAiB,EAAKA,0B,GA1DlB+B,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.607711d3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink\r\n} from 'reactstrap';\r\n\r\nconst NavBar = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <Navbar color=\"dark\" dark expand=\"md\">  \r\n            <NavbarBrand href=\"/\">Clicky Game</NavbarBrand>\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n                <Nav className=\"ml-auto\" navbar>\r\n                    <NavItem>\r\n                        <NavLink href=\"https://github.com/alfredo195\" target=\"_blank\" active>GitHub</NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction characterCard(props) {\r\n    return (\r\n        <div className=\"card\">\r\n                <img alt={props.name} src={props.image} onClick={() => props.handleIncrement(props.id)}></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default characterCard;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;","import React, { Component } from \"react\";\r\nimport NavBar from \"./components/Navbar\";\r\nimport CharacterCard from \"./components/CharacterCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport characters from \"./characters.json\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n      characters,\r\n      count: 0,\r\n      high: 0\r\n    };\r\n\r\n    handleIncrement = (cardId) => {\r\n      this.state.characters.find((character, el) => {\r\n        if (character.id === cardId) {\r\n          if (characters[el].chosen === false) {\r\n            this.setState({ count: this.state.count + 1 });\r\n            characters[el].chosen = true;\r\n            this.shuffleCharacters(characters);\r\n            return true;\r\n          }\r\n          else {\r\n            this.newGame();\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n\r\n    shuffleCharacters = array => {\r\n      var currentIndex = array.length, temporaryValue, randomIndex;\r\n  \r\n      while (0 !== currentIndex) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n      }\r\n      return array;\r\n    }\r\n    newGame = () => {\r\n      if (this.state.high < this.state.count) {\r\n        this.setState({ high: this.state.count })\r\n      }\r\n      this.state.characters.forEach(character => character.chosen = false)\r\n      this.setState({ count: 0 });\r\n      return true;\r\n    }\r\n  \r\n  \r\n    // Map over this.state.characters and render a characterCard component for each character object\r\n    render() {\r\n      return (\r\n        <Wrapper>\r\n          <NavBar />\r\n          <div>count={this.state.count} high={this.state.high}</div>\r\n          <Title>Dragon Ball Memory Game</Title>\r\n          {this.state.characters.map(character => (\r\n            <CharacterCard\r\n              id={character.id}\r\n              key={character.id}\r\n              image={character.image}\r\n              handleIncrement={this.handleIncrement}\r\n            />\r\n          ))}\r\n        </Wrapper>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}